<?php
namespace Techworker\IOTA\Apps\KitchenSink;
/** @var \Techworker\IOTA\IOTA $iota */
$iota = include __DIR__ . '/../bootstrap.php';

if(isAjax())
{
    try {

{% for param in params %}
{% if(param.type == 'Techworker\\IOTA\\Node') %}
    ${{ param.name }} = $iota->getNodes()[$_POST['{{ param.name }}']];
{% elseif(param.type == 'array') %}
    {% if(param.name == 'transactionHashes') %}
        ${{ param.name }} = \Techworker\IOTA\Util\TrytesUtil::arrayToTrytes(array_map('trim', array_filter(explode("\n", $_POST['{{ param.name }}']))), \Techworker\IOTA\Type\TransactionHash::class);
    {% elseif(param.name == 'bundleHashes') %}
        ${{ param.name }} = \Techworker\IOTA\Util\TrytesUtil::arrayToTrytes(array_map('trim', array_filter(explode("\n", $_POST['{{ param.name }}']))), \Techworker\IOTA\Type\BundleHash::class);
    {% elseif(param.name == 'transactions') %}
        ${{ param.name }} = \Techworker\IOTA\Util\TrytesUtil::arrayToTrytes(array_map('trim', array_filter(explode("\n", $_POST['{{ param.name }}']))), \Techworker\IOTA\Type\Transaction::class);
    {% elseif(param.name == 'addresses') %}
        ${{ param.name }} = \Techworker\IOTA\Util\TrytesUtil::arrayToTrytes(array_map('trim', array_filter(explode("\n", $_POST['{{ param.name }}']))), \Techworker\IOTA\Type\Address::class);
    {% elseif(param.name == 'tips') %}
        ${{ param.name }} = \Techworker\IOTA\Util\TrytesUtil::arrayToTrytes(array_map('trim', array_filter(explode("\n", $_POST['{{ param.name }}']))), \Techworker\IOTA\Type\Tip::class);
    {% elseif(param.name == 'tags') %}
        ${{ param.name }} = \Techworker\IOTA\Util\TrytesUtil::arrayToTrytes(array_map('trim', array_filter(explode("\n", $_POST['{{ param.name }}']))), \Techworker\IOTA\Type\Tag::class);
    {% elseif(param.name == 'approvees') %}
        ${{ param.name }} = \Techworker\IOTA\Util\TrytesUtil::arrayToTrytes(array_map('trim', array_filter(explode("\n", $_POST['{{ param.name }}']))), \Techworker\IOTA\Type\Approvee::class);
    {% elseif(param.name == 'neighborUris') %}
        ${{ param.name }} = array_map('trim', array_filter(explode("\n", $_POST['{{ param.name }}'])));
    {% else %}
        Unknown: {{ param.type }} - {{ param.name }}
    {% endif %}
{% elseif(param.type == 'Techworker\\IOTA\\Type\\TransactionHash') %}
    ${{ param.name }} = new \Techworker\IOTA\Type\TransactionHash($_POST['{{ param.name }}']);
{% elseif(param.type == 'Techworker\\IOTA\\Type\\SecurityLevel') %}
    ${{ param.name }} = \Techworker\IOTA\Type\SecurityLevel::fromValue($_POST['{{ param.name }}']);
{% elseif(param.type == 'Techworker\\IOTA\\Type\\Seed') %}
    ${{ param.name }} = new \Techworker\IOTA\Type\Seed($_POST['{{ param.name }}']);
{% elseif(param.type == 'Techworker\\IOTA\\Type\\Tip') %}
    ${{ param.name }} = new \Techworker\IOTA\Type\Tip($_POST['{{ param.name }}']);
{% elseif(param.type == 'Techworker\\IOTA\\Type\\Milestone') %}
    ${{ param.name }} = new \Techworker\IOTA\Type\Milestone($_POST['{{ param.name }}']);
{% elseif(param.type == 'Techworker\\IOTA\\Type\\Transaction') %}
    ${{ param.name }} = new \Techworker\IOTA\Type\Transaction($_POST['{{ param.name }}']);
{% elseif(param.type == 'Techworker\\IOTA\\Type\\BundleHash') %}
    ${{ param.name }} = new \Techworker\IOTA\Type\BundleHash($_POST['{{ param.name }}']);
{% elseif(param.type == 'Techworker\\IOTA\\Type\\Address') %}
    ${{ param.name }} = new \Techworker\IOTA\Type\Address($_POST['{{ param.name }}']);
{% elseif(param.type == 'Techworker\\IOTA\\Type\\Iota') %}
    ${{ param.name }} = new \Techworker\IOTA\Type\Iota($_POST['{{ param.name }}']);
{% elseif(param.type == 'int') %}
    ${{ param.name }} = (int)$_POST['{{ param.name }}'];
{% elseif(param.type == 'bool') %}
    ${{ param.name }} = isset($_POST['{{ param.name }}']);
{% endif %}
{% endfor %}

{% if(type == 'remote') %}
    $result = $iota->getRemoteApi()->{{ method }}(
{% else %}
    $result = $iota->getClientApi()->{{ method }}(
{% endif %}
{% for param in params %}
    ${{ param.name }}{%  if(not(loop.last)) %},{% endif %}
{% endfor %}
);
sendJson($result);
}
catch(\Exception $ex) {
sendJson(['error' => $ex->getMessage()]);
}
exit;
}

?>
<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>IOTA Explorer.</title>

    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css" integrity="sha384-PsH8R72JQ3SOdhVi3uxftmaW6Vc51MKb0q5P2rRUpPvrszuE4W1povHYgTpBfshb" crossorigin="anonymous">
    <link rel="stylesheet" href="/iota-php.css">
    <style>
        body {
            min-height: 75rem;
        }
    </style>
    <script
            src="https://code.jquery.com/jquery-3.2.1.js"
            integrity="sha256-DZAnKJ/6XZ9si04Hgrsxu/8s717jcIzLy3oi35EouyE="
            crossorigin="anonymous"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/languages/json.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/styles/monokai-sublime.min.css" />
</head>

<body>

<main role="main" class="container">
    <nav class="navbar navbar-expand-md navbar-dark bg-dark mb-4">
        <a class="navbar-brand" href="#">IOTA-PHP KitchenSink</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarCollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarCollapse">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Client API</a>
                    <div class="dropdown-menu" aria-labelledby="dropdown09">
                        {% for clientApiMethod in clientApiMethods %}
                            <a class="dropdown-item" href="/kitchen_sink/client_api/{{ clientApiMethod }}.php">{{ clientApiMethod }}</a>
                        {% endfor %}
                    </div>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Remote API</a>
                    <div class="dropdown-menu" aria-labelledby="dropdown10">
                        {% for remoteApiMethod in remoteApiMethods %}
                            <a class="dropdown-item" href="/kitchen_sink/remote_api/{{ remoteApiMethod }}.php">{{ remoteApiMethod }}</a>
                        {% endfor %}
                    </div>
                </li>
            </ul>
        </div>
    </nav>

    {% for param in params %}
        {% if(param.type == 'Techworker\\IOTA\\Node') %}
            <div class="form-group">
                <label for="node">Node</label>
                <select class="form-control" id="node" name="node">
                    <?php foreach($iota->getNodes() as $k => $node) : ?>
                    <option value="<?= $k ?>"><?= $node->getHost() ?></option>
                    <?php endforeach; ?>
                </select>
            </div>

        {% elseif(param.type == 'Techworker\\IOTA\\Type\\TransactionHash' or
            param.type == 'Techworker\\IOTA\\Type\\BundleHash' or
            param.type == 'Techworker\\IOTA\\Type\\Address' or
            param.type == 'Techworker\\IOTA\\Type\\Transaction' or
            param.type == 'Techworker\\IOTA\\Type\\Milestone' or
            param.type == 'Techworker\\IOTA\\Type\\Tip') %}
            <div class="form-group">
                <label for="{{ param.name }}">{{ param.name }}</label>
                <input type="text" class="form-control" id="{{ param.name }}" name="{{ param.name }}" aria-describedby="{{ param.name }}" placeholder="" value="">
            </div>
        {% elseif(param.type == 'Techworker\\IOTA\\Type\\Seed') %}
            <div class="form-group">
                <label for="seed">Seed</label>
                <input type="text" class="form-control" id="{{ param.name }}" name="{{ param.name }}" aria-describedby="{{ param.name }}" placeholder="" value="THISISTHETESTINGWALLETFORTHEPHPIOTALIBRARY9YOUMIGHTWANTTOSTEALTHEMBUTHEY9WTF9WHY9">
                <small class="form-text text-muted">Online? This is just for local testing!</small>
            </div>
        {% elseif(param.type == 'Techworker\\IOTA\\Type\\SecurityLevel') %}
            <div class="form-group">
                <label for="security">Security Level</label>
                <select class="form-control" id="security" name="security">
                    <option value="1">1</option>
                    <option value="2" selected="selected">2</option>
                    <option value="3">3</option>
                </select>
            </div>
        {% elseif(param.type == 'array') %}
            {% if(param.name == 'transactionHashes' or param.name == 'bundleHashes' or param.name == 'transactions' or param.name == 'neighborUris' or param.name == 'addresses' or param.name == 'tags' or param.name == 'approvees' or param.name == 'tips') %}
                <div class="form-group">
                    <label for="{{ param.name }}">{{ param.name }}</label>
                    <textarea class="form-control" id="{{ param.name }}" name="{{ param.name }}" rows="3"></textarea>
                    <small class="form-text text-muted">new line for each</small>
                </div>
            {% endif %}
        {% elseif(param.type == 'int' or param.type == 'Techworker\\IOTA\\Type\\Iota') %}
            <div class="form-group">
                <label for="{{ param.name }}">{{ param.name }}</label>
                <input type="number" class="form-control" name="{{ param.name }}" id="{{ param.name }}" value="{{ param.default }}">
            </div>
        {% elseif(param.type == 'bool') %}
            <div class="form-check">
                <label class="form-check-label">
                    <input type="checkbox" id="{{ param.name }}" name="{{ param.name }}" value="1" class="form-check-input"{% if(param.default == true) %} checked="checked"{% endif %}>
                    {{ param.name }}
                </label>
            </div>
        {% else %}
            Unknown: {{ param.type }} - {{ param.name }}
        {% endif %}
    {% endfor %}
    <button id="submit" type="submit" class="btn btn-primary">Submit</button>
    <ul class="nav nav-tabs" id="myTab" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="json-tab" data-toggle="tab" href="#home" role="tab" aria-controls="json" aria-selected="true">JSON result</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="performance-tab" data-toggle="tab" href="#profile" role="tab" aria-controls="performance" aria-selected="false">Performance</a>
        </li>
    </ul>
    <div class="tab-content" id="myTabContent">
        <div class="tab-pane fade show active" id="json" role="tabpanel" aria-labelledby="json-tab">
            <pre><code class="json" id="result">empty.</code></pre>
        </div>
        <div class="tab-pane fade" id="performance" role="tabpanel" aria-labelledby="profile-tab">
            performance
        </div>
    </div>
    <div class="card">
        <h4 class="card-header">Result</h4>
        <div class="card-body">

        </div>
    </div>

    <script>
        $('#submit').on('click', function(e) {
            var data = {
            {% for param in params %}
            {% if(param.type != 'bool') %}
            {{ param.name }}: $("#{{ param.name }}").val(){% if(not(loop.last)) %},{% endif %}
            {% endif %}
            {% endfor %}
        };
            {% for param in params %}
            {% if(param.type == 'bool') %}
            if($("#{{ param.name }}").is(':checked')) {
                data.{{ param.name }} = true;
            }
            {% endif %}
            {% endfor %}

            $.post(window.location.href,data)
                .done(function(data) {
                    $("#result").html(JSON.stringify(data, null, 2));
                    $('pre code').each(function(i, block) {
                        hljs.highlightBlock(block);
                    });
                });
        })
    </script>

</main>

<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.3/umd/popper.min.js" integrity="sha384-vFJXuSJphROIrBnz7yo7oB41mKfc8JzQZiCq4NCceLEaO4IHwicKwpJf9c9IpFgh" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0-beta.2/js/bootstrap.min.js" integrity="sha384-alpBpkh1PFOepccYVYDB4do5UnbKysX5WZXm3XxPqe5iKTfUKjNkCk9SaVuEZflJ" crossorigin="anonymous"></script>
</body>
</html>